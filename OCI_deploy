1. Docker CLI
Docker Cloud maintains a Command Line Interface (CLI) tool that you can use to interact with the service. 

2. Docker registry
The Docker Registry HTTP API is the protocol to facilitate distribution of images to the docker engine. 
It interacts with instances of the docker registry, 
which is a service to manage information about docker images and enable their distribution.
Docker Registry 协议 v2 是 Docker 工具集用于在注册表和用户之间推送和拉取镜像的协议。


Step 1: Setup OCI IDCS Deployer container
docker login, login to docker cloud.
Docker Cloud 是caas（Container as a Service）容器即服务，caas是在paas之上的。
Docker Cloud，Docker在2015年11月收购了tutum.co在2018年2月份推出了Docker Cloud，它基本上提供了Docker自身原生的一个编排的API。

Pull oci-deployer.

ssh to Bastion host IP using opc user and opc key attached above
ssh -i <key> opc@<bastion_ip>
docker exec-it idcs-oci-deployer /bin/bash


Step 2: Create infrastructure resources
IAM service: Identityand Access Management service, gate keeper, decide who an access OCI accout.
Resouce: object u create in OCI, including computer resources, block storage volumes, Virtual cloud Networks.
IAM use traditional identity concepts, such as principal, groups, policies.

Group, user and principal are independent, they are global, not specific to a compartment

policy is created within a given compartment.

compartment:


OCI IAM introduce new concept: compartment (in the tenancy, logical container used to organize and isolate related cloud resources)
API Signing key is required when using OCI API in conjunction with the SDK(Java SDK, python SDK, go SDK..)/
CLI(The CLI is a small footprint tool that you can use on its own or with the Console to complete Oracle Cloud Infrastructure tasks)
There are SDK/CLI configure files.

Terraform:Push approach,used for Provisioning app/service to IaaS.
https://www.terraform.io/intro/index.html
Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently. 
The infrastructure Terraform can manage includes low-level components such as compute instances, storage, and networking, 
as well as high-level components such as DNS entries, SaaS features, etc.

Infrastructure as Code, in simple terms, is a means by which we can write declarative definitions for 
the infrastructure we want to exist and using them with a provisioning tool that deals with the actual deployment. 
This means that we can code what we want built, provide necessary credentials for the given IaaS provider, 
kick off the provisioning process, pop the kettle on and come back to find all your services purring along nicely in the cloud… or a terminal screen full of ominous warnings about failed deployment and “unrecoverable state” and a deep sense of growing unease 

Infrastructures:

Terraform can be used with many cloud providers

Oracle Cloud IDs (OCIDs):
Every Oracle Cloud Infrastructure resource has an Oracle-assigned unique ID called an Oracle Cloud Identifier (OCID). 
It's included as part of the resource's information in both the Console and API
ocid1.<RESOURCE TYPE>.<REALM>.[REGION][.FUTURE USE].<UNIQUE ID>

region:
Oracle Cloud Infrastructure is hosted in regions and availability domains. 
A region is a localized geographic area, and an availability domain is one or more data centers located within a region. 
A region is composed of several availability domains. 
Regions are completely independent of other regions and can be separated by vast distances—across countries or even continents.
Generally, you would deploy an application in the region where it is most heavily used, since using nearby resources is faster than using distant resources. H
https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm


Availability domains:
Availability domains are isolated from each other, fault tolerant, and very unlikely to fail simultaneously. 
All the availability domains in a region are connected to each other

Tenancy:
The root compartment that contains all of your organization's compartments and 
other Oracle Cloud Infrastructure cloud resources.


Availability domains VS Tenancy:
Oracle Cloud Infrastructure uses tenancy-specific prefixes for the availability domain names

Object Storage:
Hot Storage VS cold storag
Object Storage is a regional service and is not tied to any specific compute instance. 

Object Storage resources:
Each object is stored in a bucket.
 
Bucket:
In the Oracle Cloud Infrastructure Object Storage service, a bucket is a container for storing objects in a compartment 
within an Object Storage namespace.
A logical container for storing objects. 
Users or systems create buckets as needed within a region. A bucket is associated with a single compartment 
can be used for storing terraform state information

tag and tag name space

NAMESPACE
A logical entity that serves as a top-level container for all buckets and objects, 
allowing you to control bucket naming within your tenancy. 

Customer Secret Keys: 
For using the Amazon S3 Compatibility API with Object Storage. See Amazon S3 Compatibility API .
Using the Amazon S3 Compatibility API, customers can continue to use their existing Amazon S3 tools (for example, SDK clients)
and partners can make minimal changes to their applications to work with Object Storage. 
The Amazon S3 Compatibility API and Object Storage data sets are congruent. 
If data is written to the Object Storage using the Amazon S3 Compatibility API, 
the data can be read back using the native Object Storage API and vice versa.

For all files which match terraform.tfvars or *.auto.tfvars present in the current directory, 
Terraform automatically loads them to populate variables. 

bastion?

Tenancy?
Tenancy VS region
Tenancy 对应一个帐户，可以是跨region的

Group are for user principle
Dynamic groups are for instance principle

A terraform can be deployed for Instance (App?)

Service limits:
When you sign up for Oracle Cloud Infrastructure, a set of service limits are configured for your tenancy. 


Kub manage:
helm: package manager for Kubernetes
/scratch/oradev/idcs/bin/deployer/scripts/midtierInstall.sh
./app/data/logs/deployment_logs/trace_log/install_20181117161357.log

Charts:
Helm uses a packaging format called charts. 
A chart is a collection of files that describe a related set of Kubernetes resources. 
A single chart might be used to deploy something simple, like a memcached pod, or something complex, 
like a full web app stack with HTTP servers, databases, caches, and so on.
